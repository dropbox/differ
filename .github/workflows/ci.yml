name: CI

on:
  # Only run on push to main branch
  push:
    branches:
      - main
  # Always run on PRs
  pull_request:

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2g -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  build:
    name: Build and Test
    runs-on: 'macos-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

      - name: Generate cache key
        run: .github/scripts/checksum.sh checksum.txt

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Install JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Test Common JVM
        run: ./gradlew jvmTest koverMergedReport --stacktrace

      - name: (Fail-only) Bundle test reports
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: (Fail-only) Upload the build report
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: error-report
          path: build-reports.zip

  publish:
    if: github.repository == 'dropbox/differ' && github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    needs: [build]
    strategy:
      matrix:
        include:
          - snapshot-target: publishIosArm64PublicationToMavenCentralRepository
            os: macos-latest
          - snapshot-target: publishJvmPublicationToMavenCentralRepository
            os: ubuntu-latest
          - snapshot-target: publishLinuxX64PublicationToMavenCentralRepository
            os: ubuntu-latest
          - release-target: publishIosArm64PublicationToMavenCentral
            os: macos-latest
          - release-target: publishJvmPublicationToMavenCentral
            os: ubuntu-latest
          - release-target: publishLinuxX64PublicationToMavenCentral
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - uses: actions/cache@v3
        with:
          path: |
            ~/.konan
          key: ${{ runner.os }}-${{ hashFiles('**/.lock') }}

      - name: Install JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Upload Snapshot
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: |
            ${{ matrix.snapshot-target }}
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

      - name: Retrieve Version
        run: echo "VERSION_NAME=$(./gradlew -q  printVersionName)" >> $GITHUB_ENV

      - name: Publish release (main only)
        uses: gradle/actions/setup-gradle@v3
        if: success() && !endsWith(env.VERSION_NAME, '-SNAPSHOT')
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
        with:
          arguments: |
            ${{ matrix.release-target }}
            closeAndReleaseRepository
